openapi: 3.0.3
info:
  title: Swagger Eventstore - OpenAPI 3.1
  description: |-
    This is a sample Event Store Server based on the OpenAPI 3.1 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the event store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    Some useful links:
    - [The Event Store repository](https://github.com/swagger-api/swagger-eventstore)
    - [The source API definition for the Event Store](https://github.com/swagger-api/swagger-eventstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://eventstore3.swagger.io/api/v3
tags:
- name: event
  description: Everything about your Events
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /events/:
    get:
      tags:
      - event
      summary: Finds Events by status
      description: Multiple status values can be provided with comma separated strings
      operationId: find_events_by_status
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: pending
          enum: ["pending", "canceled", "past"]
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        "400":
          description: Invalid status value

      x-openapi-router-controller: swagger_server.controllers.event_controller
  /events/{id}:
    get:
      tags:
      - event
      summary: Find event by ID
      description: Returns a single event
      operationId: get_event_by_id
      parameters:
      - name: eventId
        in: path
        description: ID of event to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event'
        "400":
          description: Invalid ID supplied
        "404":
          description: Event not found
      x-openapi-router-controller: swagger_server.controllers.event_controller
  /events/{id}/inscriptions:
    post:
      tags:
      - event
      summary: Inscription in an event
      description: Inscription in an event
      operationId: update_event_with_form
      parameters:
      - name: eventId
        in: path
        description: ID of event that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Name of the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: surname
        in: query
        description: Surname of the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: telephone
        in: query
        description: Telephone of the user
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: dni
        in: query
        description: dni of the user
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: mail
        in: query
        description: mail of the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.event_controller
  /events/{id}/inscriptions/{guid}:
    get:
      tags:
      - event
      summary: Find event by ID
      description: Return inscription for one user (guid)
      operationId: events_id_inscriptions_guid_get
      parameters:
      - name: eventId
        in: path
        description: ID of event to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            application/xml:
              schema:
                $ref: '#/components/schemas/Event'
        "400":
          description: Invalid ID supplied
        "404":
          description: Event not found

      x-openapi-router-controller: swagger_server.controllers.event_controller
  /events/{id}/inscriptions/{invitation-code}:
    delete:
      tags:
      - event
      description: Delete inscription
      operationId: upload_file
      parameters:
      - name: invitation_code
        in: path
        description: Delete inscription
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

      x-openapi-router-controller: swagger_server.controllers.event_controller
components:
  schemas:
    Event:
      required:
      - capacity
      - date
      - description
      - location
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        date:
          type: string
          example: 9/12/2018
        description:
          type: string
          example: Presentacion Tesis
        location:
          $ref: '#/components/schemas/Event_location'
        capacity:
          type: number
          example: 500
      example:
        date: 9/12/2018
        description: Presentacion Tesis
        location:
          latitude: -34.60973
          longitude: -68.3219916
        id: 10
        capacity: 500
    Event_location:
      type: object
      properties:
        latitude:
          type: number
          example: -34.60973
        longitude:
          type: number
          example: -68.3219916
      example:
        latitude: -34.60973
        longitude: -68.3219916

